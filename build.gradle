/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    id 'application'
    id 'org.sonarqube' version '3.0'
    id "com.github.johnrengelman.shadow" version "6.0.0"
}

apply from: 'test.gradle'

version = 0.1

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    compile fileTree(dir: 'src/libs', includes: ['testng-7.4.0-RESTEL.jar'])
//    compile project(":testng-restel")

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    compile group: 'io.qameta.allure', name: 'allure-gradle', version: '2.5'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.3'
    compile group: 'org.springframework.batch', name: 'spring-batch-core', version: '4.2.4.RELEASE'
    compile group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    // https://mvnrepository.com/artifact/javax.ws.rs/javax.ws.rs-api
    compile group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
    compile group: 'org.apache.poi', name: 'poi', version: '4.1.2'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    // https://mvnrepository.com/artifact/io.swagger.parser.v3/swagger-parser
    compile group: 'io.swagger.parser.v3', name: 'swagger-parser', version: '2.0.22'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    // https://mvnrepository.com/artifact/com.networknt/json-schema-validator
    compile group: 'com.networknt', name: 'json-schema-validator', version: '1.0.43'
    // https://mvnrepository.com/artifact/com.github.fslev/json-compare
    compile group: 'com.github.fslev', name: 'json-compare', version: '2.15'

    // https://mvnrepository.com/artifact/junit/junit
    testCompile group: 'junit', name: 'junit', version: '4.13'
    // https://mvnrepository.com/artifact/org.powermock/powermock-module-junit4
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7'
    // https://mvnrepository.com/artifact/org.powermock/powermock-api-mockito2
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.7'


}

compileJava {
    options.annotationProcessorPath = configurations.annotationProcessor
}

task(runSwagger, dependsOn: 'classes', type: JavaExec) {
    main = 'com.techconative.restel.swagger.RestelWriterApplication'
    classpath = sourceSets.main.runtimeClasspath
}
// Include dependent libraries in archive.
mainClassName = "com.techconative.restel.core.RestelApplication"

sonarqube {
    properties {
        property "sonar.host.url", "http://localhost:9000"
    }
}

jacoco {
    toolVersion = "0.8.5"
}
test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}
tasks['sonarqube'].dependsOn test

//Source https://docs.gradle.org/current/userguide/jacoco_plugin.html
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled true
        csv.enabled false
    }
}

